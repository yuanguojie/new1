<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Mapper.T_RemainStockMapper">
  <resultMap id="BaseResultMap" type="domain.T_RemainStock">
    <id column="Id" jdbcType="INTEGER" property="id" />
    <result column="Amount" jdbcType="INTEGER" property="amount" />
    <result column="Price" jdbcType="DOUBLE" property="price" />
    <result column="DeptId" jdbcType="INTEGER" property="deptId" />
    <result column="StorageId" jdbcType="INTEGER" property="storageId" />
    <result column="AssetId" jdbcType="INTEGER" property="assetId" />
  </resultMap>
  <sql id="Base_Column_List">
    Id, Amount, Price, DeptId, StorageId, AssetId
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_remainstock
    where Id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByAssetId" parameterType="domain.T_RemainStock" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_remainstock
    <if test="assetId != null &#38;&#38; assetId != ''">
    where AssetId = #{assetId,jdbcType=INTEGER}
    </if>
  </select>
  <select id="selectBy3id" parameterType="domain.T_RemainStock" resultMap="BaseResultMap">
  	select
  	<include refid="Base_Column_List" />
  	from t_remainstock
  	where DeptId = #{deptId,jdbcType=INTEGER} and StorageId = #{storageId,jdbcType=INTEGER} and AssetId = #{assetId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_remainstock
    where Id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="domain.T_RemainStock">
    insert into t_remainstock (Id, Amount, Price, 
      DeptId, StorageId, AssetId
      )
    values (#{id,jdbcType=INTEGER}, #{amount,jdbcType=INTEGER}, #{price,jdbcType=DECIMAL}, 
      #{deptId,jdbcType=INTEGER}, #{storageId,jdbcType=INTEGER}, #{assetId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="domain.T_RemainStock">
    insert into t_remainstock
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="amount != null">
        Amount,
      </if>
      <if test="price != null">
        Price,
      </if>
      <if test="deptId != null">
        DeptId,
      </if>
      <if test="storageId != null">
        StorageId,
      </if>
      <if test="assetId != null">
        AssetId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="amount != null">
        #{amount,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="deptId != null">
        #{deptId,jdbcType=INTEGER},
      </if>
      <if test="storageId != null">
        #{storageId,jdbcType=INTEGER},
      </if>
      <if test="assetId != null">
        #{assetId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="domain.T_RemainStock">
    update t_remainstock
    <set>
      <if test="amount != null">
        Amount = #{amount,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        Price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="deptId != null">
        DeptId = #{deptId,jdbcType=INTEGER},
      </if>
      <if test="storageId != null">
        StorageId = #{storageId,jdbcType=INTEGER},
      </if>
      <if test="assetId != null">
        AssetId = #{assetId,jdbcType=INTEGER},
      </if>
    </set>
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="domain.T_RemainStock">
    update t_remainstock
    set Amount = #{amount,jdbcType=INTEGER},
      Price = #{price,jdbcType=DECIMAL},
      DeptId = #{deptId,jdbcType=INTEGER},
      StorageId = #{storageId,jdbcType=INTEGER},
      AssetId = #{assetId,jdbcType=INTEGER}
    where Id = #{id,jdbcType=INTEGER}
  </update>
</mapper>