<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Mapper.T_TakeStockDtlMapper">
  <resultMap id="BaseResultMap" type="domain.T_TakeStockDtl">
    <id column="Id" jdbcType="INTEGER" property="id" />
    <result column="SortCode" jdbcType="INTEGER" property="sortCode" />
    <result column="Depr_id" jdbcType="INTEGER" property="depr_id" />
    <result column="TotalAmount" jdbcType="INTEGER" property="totalAmount" />
    <result column="LostAmount" jdbcType="INTEGER" property="lostAmount" />
    <result column="TakeStockId" jdbcType="INTEGER" property="takeStockId" />
    <result column="AssetId" jdbcType="INTEGER" property="assetId" />
  </resultMap>
  <resultMap id="BaseResultMap2" type="domainextand.T_TakeStock2">
  	<id column="tid" jdbcType="INTEGER" property="id" />
    <result column="BillNo" jdbcType="VARCHAR" property="billNo" />
    <result column="TSDate" jdbcType="VARCHAR" property="TSDate" />
    <result column="CheckDateT" jdbcType="VARCHAR" property="checkDateT" />
    <result column="FlowFlag" jdbcType="INTEGER" property="flowFlag" />
    <result column="DeptId" jdbcType="INTEGER" property="deptId" />
    <result column="CreateEmpId" jdbcType="INTEGER" property="createEmpId" />
    <result column="TakeEmpId" jdbcType="INTEGER" property="takeEmpId" />
    <result column="StorageId" jdbcType="INTEGER" property="storageId" />
    <result column="CheckEmpId" jdbcType="INTEGER" property="checkEmpId" />
    <result column="SortCode" jdbcType="INTEGER" property="sortCode" />
    <result column="Depr_id" jdbcType="INTEGER" property="depr_id" />
    <result column="TotalAmount" jdbcType="INTEGER" property="totalAmount" />
    <result column="LostAmount" jdbcType="INTEGER" property="lostAmount" />
    <result column="AssetId" jdbcType="INTEGER" property="assetId" />
  </resultMap>
  <sql id="Base_Column_List">
    Id, SortCode, Depr_id, TotalAmount, LostAmount, TakeStockId, AssetId
  </sql>
  <sql id="Base_Column_List2">
  	t.Id tid, BillNo, TSDate, CheckDateT, FlowFlag, DeptId, CreateEmpId, TakeEmpId, StorageId, 
    CheckEmpId, SortCode, Depr_id, TotalAmount, LostAmount, AssetId
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_takestockdtl
    where Id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByAssetId" parameterType="domain.T_TakeStockDtl" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_takestockdtl
    <if test="assetId != null &#38;&#38; assetId != ''">
    where AssetId = #{assetId,jdbcType=INTEGER}
    </if>
  </select>
  <select id="selectFlowByBillNo" parameterType="domainextand.T_TakeStock2" resultMap="BaseResultMap2">
  	select
  	<include refid="Base_Column_List2" />
  	from t_takestockdtl d join t_takestock t on d.Id = t.Id
  	where FlowFlag = 0
  	<if test="billNo != null &#38;&#38; billNo != ''">
  	and BillNo = #{billNo,jdbcType=VARCHAR}
  	</if>
  </select>
  <select id="selectFlowById" parameterType="domainextand.T_TakeStock2" resultMap="BaseResultMap2">
  	select
  	<include refid="Base_Column_List2" />
  	from t_takestockdtl d join t_takestock t on d.Id = t.Id
  	where FlowFlag = 0
  	<if test="id != null &#38;&#38; id != ''">
  	and id = #{id,jdbcType = INTEGEG}
  	</if>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_takestockdtl
    where Id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="domain.T_TakeStockDtl">
    insert into t_takestockdtl (Id, SortCode, Depr_id, 
      TotalAmount, LostAmount, TakeStockId, 
      AssetId)
    values (#{id,jdbcType=INTEGER}, #{sortCode,jdbcType=INTEGER}, #{depr_id,jdbcType=INTEGER}, 
      #{totalAmount,jdbcType=INTEGER}, #{lostAmount,jdbcType=INTEGER}, #{takeStockId,jdbcType=INTEGER}, 
      #{assetId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="domain.T_TakeStockDtl">
    insert into t_takestockdtl
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        Id,
      </if>
      <if test="sortCode != null">
        SortCode,
      </if>
      <if test="depr_id != null">
        Depr_id,
      </if>
      <if test="totalAmount != null">
        TotalAmount,
      </if>
      <if test="lostAmount != null">
        LostAmount,
      </if>
      <if test="takeStockId != null">
        TakeStockId,
      </if>
      <if test="assetId != null">
        AssetId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="sortCode != null">
        #{sortCode,jdbcType=INTEGER},
      </if>
      <if test="depr_id != null">
        #{depr_id,jdbcType=INTEGER},
      </if>
      <if test="totalAmount != null">
        #{totalAmount,jdbcType=INTEGER},
      </if>
      <if test="lostAmount != null">
        #{lostAmount,jdbcType=INTEGER},
      </if>
      <if test="takeStockId != null">
        #{takeStockId,jdbcType=INTEGER},
      </if>
      <if test="assetId != null">
        #{assetId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="domain.T_TakeStockDtl">
    update t_takestockdtl
    <set>
      <if test="sortCode != null">
        SortCode = #{sortCode,jdbcType=INTEGER},
      </if>
      <if test="depr_id != null">
        Depr_id = #{depr_id,jdbcType=INTEGER},
      </if>
      <if test="totalAmount != null">
        TotalAmount = #{totalAmount,jdbcType=INTEGER},
      </if>
      <if test="lostAmount != null">
        LostAmount = #{lostAmount,jdbcType=INTEGER},
      </if>
      <if test="takeStockId != null">
        TakeStockId = #{takeStockId,jdbcType=INTEGER},
      </if>
      <if test="assetId != null">
        AssetId = #{assetId,jdbcType=INTEGER},
      </if>
    </set>
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="domain.T_TakeStockDtl">
    update t_takestockdtl
    set SortCode = #{sortCode,jdbcType=INTEGER},
      Depr_id = #{depr_id,jdbcType=INTEGER},
      TotalAmount = #{totalAmount,jdbcType=INTEGER},
      LostAmount = #{lostAmount,jdbcType=INTEGER},
      TakeStockId = #{takeStockId,jdbcType=INTEGER},
      AssetId = #{assetId,jdbcType=INTEGER}
    where Id = #{id,jdbcType=INTEGER}
  </update>
</mapper>