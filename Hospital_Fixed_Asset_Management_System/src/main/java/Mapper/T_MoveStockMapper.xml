<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Mapper.T_MoveStockMapper">
  <resultMap id="BaseResultMap" type="domain.T_MoveStock">
    <id column="Id" jdbcType="INTEGER" property="id" />
    <result column="BillNo" jdbcType="VARCHAR" property="billNo" />
    <result column="OutDate" jdbcType="VARCHAR" property="outDate" />
    <result column="FlowFlag" jdbcType="INTEGER" property="flowFlag" />
    <result column="TotalCost" jdbcType="DECIMAL" property="totalCost" />
    <result column="InDate" jdbcType="VARCHAR" property="inDate" />
    <result column="DeptId" jdbcType="INTEGER" property="deptId" />
    <result column="CreateEmpId" jdbcType="INTEGER" property="createEmpId" />
    <result column="OutEmpId" jdbcType="INTEGER" property="outEmpId" />
    <result column="OutStorageId" jdbcType="INTEGER" property="outStorageId" />
    <result column="InDeptId" jdbcType="INTEGER" property="inDeptId" />
    <result column="InStorageId" jdbcType="INTEGER" property="inStorageId" />
    <result column="InEmpId" jdbcType="INTEGER" property="inEmpId" />
  </resultMap>
  <resultMap id="BaseResultMap2" type="domainextand.T_MoveStock">
    <id column="m.Id" jdbcType="INTEGER" property="id" />
    <result column="BillNo" jdbcType="VARCHAR" property="billNo" />
    <result column="OutDate" jdbcType="VARCHAR" property="outDate" />
    <result column="FlowFlag" jdbcType="INTEGER" property="flowFlag" />
    <result column="TotalCost" jdbcType="DOUBLE" property="totalCost" />
    <result column="InDate" jdbcType="VARCHAR" property="inDate" />
    <result column="DeptId" jdbcType="INTEGER" property="deptId" />
    <result column="CreateEmpId" jdbcType="INTEGER" property="createEmpId" />
    <result column="OutEmpId" jdbcType="INTEGER" property="outEmpId" />
    <result column="OutStorageId" jdbcType="INTEGER" property="outStorageId" />
    <result column="InDeptId" jdbcType="INTEGER" property="inDeptId" />
    <result column="InStorageId" jdbcType="INTEGER" property="inStorageId" />
    <result column="InEmpId" jdbcType="INTEGER" property="inEmpId" />
    
    <result column="SortCode" jdbcType="INTEGER" property="sortCode" />
    <result column="OutAmount" jdbcType="INTEGER" property="outAmount" />
    <result column="Price" jdbcType="DOUBLE" property="price" />
    <result column="InAmount" jdbcType="INTEGER" property="inAmount" />
    <result column="MoveStockId" jdbcType="INTEGER" property="moveStockId" />
    <result column="AssetId" jdbcType="INTEGER" property="assetId" />
  </resultMap>
  <sql id="Base_Column_List">
    Id, BillNo, OutDate, FlowFlag, TotalCost, InDate, DeptId, CreateEmpId, OutEmpId, 
    OutStorageId, InDeptId, InStorageId, InEmpId
  </sql>
  <sql id="Base_Column_List2">
    m.Id, BillNo, OutDate, FlowFlag, TotalCost, InDate, DeptId, CreateEmpId, OutEmpId, 
    OutStorageId, InDeptId, InStorageId, InEmpId, SortCode, OutAmount, Price, InAmount, MoveStockId, AssetId
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_movestock
    where Id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectById" parameterType="domainextand.T_MoveStock" resultMap="BaseResultMap2">
  	select
  <include refid="Base_Column_List2" />
  from t_movestock m,t_movestockdtl d
  where BillNo = d.Id
  <if test="id != null &#38;&#38; id != ''">
  and m.Id = #{id,jdbcType=INTEGER}
  </if>
  </select>
  <select id="selectByBillNo" parameterType="domain.T_MoveStock" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_movestock
    <if test="billNo != null &#38;&#38; billNo != ''">
    where BillNo = #{billNo,jdbcType=INTEGER}
    </if>
  </select>
  <select id="selectByAssetId" parameterType="domainextand.T_MoveStock" resultMap="BaseResultMap2">
  select
  <include refid="Base_Column_List2" />
  from t_movestock m,t_movestockdtl d
  where BillNo = d.Id and FlowFlag = 0
  <if test="assetId != null &#38;&#38; assetId != ''">
  and AssetId = #{assetId,jdbcType=INTEGER}
  </if>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_movestock
    where Id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="domain.T_MoveStock">
    insert into t_movestock (Id, BillNo, OutDate, 
      FlowFlag, TotalCost, InDate, 
      DeptId, CreateEmpId, OutEmpId, 
      OutStorageId, InDeptId, InStorageId, 
      InEmpId)
    values (#{id,jdbcType=INTEGER}, #{billNo,jdbcType=VARCHAR}, #{outDate,jdbcType=VARCHAR}, 
      #{flowFlag,jdbcType=INTEGER}, #{totalCost,jdbcType=DOUBLE}, #{inDate,jdbcType=VARCHAR}, 
      #{deptId,jdbcType=INTEGER}, #{createEmpId,jdbcType=INTEGER}, #{outEmpId,jdbcType=INTEGER}, 
      #{outStorageId,jdbcType=INTEGER}, #{inDeptId,jdbcType=INTEGER}, #{inStorageId,jdbcType=INTEGER}, 
      #{inEmpId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="domain.T_MoveStock">
    insert into t_movestock
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        Id,
      </if>
      <if test="billNo != null">
        BillNo,
      </if>
      <if test="outDate != null">
        OutDate,
      </if>
      <if test="flowFlag != null">
        FlowFlag,
      </if>
      <if test="totalCost != null">
        TotalCost,
      </if>
      <if test="inDate != null">
        InDate,
      </if>
      <if test="deptId != null">
        DeptId,
      </if>
      <if test="createEmpId != null">
        CreateEmpId,
      </if>
      <if test="outEmpId != null">
        OutEmpId,
      </if>
      <if test="outStorageId != null">
        OutStorageId,
      </if>
      <if test="inDeptId != null">
        InDeptId,
      </if>
      <if test="inStorageId != null">
        InStorageId,
      </if>
      <if test="inEmpId != null">
        InEmpId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="billNo != null">
        #{billNo,jdbcType=VARCHAR},
      </if>
      <if test="outDate != null">
        #{outDate},
      </if>
      <if test="flowFlag != null">
        #{flowFlag,jdbcType=INTEGER},
      </if>
      <if test="totalCost != null">
        #{totalCost,jdbcType=DOUBLE},
      </if>
      <if test="inDate != null">
        #{inDate},
      </if>
      <if test="deptId != null">
        #{deptId,jdbcType=INTEGER},
      </if>
      <if test="createEmpId != null">
        #{createEmpId,jdbcType=INTEGER},
      </if>
      <if test="outEmpId != null">
        #{outEmpId,jdbcType=INTEGER},
      </if>
      <if test="outStorageId != null">
        #{outStorageId,jdbcType=INTEGER},
      </if>
      <if test="inDeptId != null">
        #{inDeptId,jdbcType=INTEGER},
      </if>
      <if test="inStorageId != null">
        #{inStorageId,jdbcType=INTEGER},
      </if>
      <if test="inEmpId != null">
        #{inEmpId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="domain.T_MoveStock">
    update t_movestock
    <set>
      <if test="billNo != null">
        BillNo = #{billNo,jdbcType=VARCHAR},
      </if>
      <if test="outDate != null">
        OutDate = #{outDate,jdbcType=VARCHAR},
      </if>
      <if test="flowFlag != null">
        FlowFlag = #{flowFlag,jdbcType=INTEGER},
      </if>
      <if test="totalCost != null">
        TotalCost = #{totalCost,jdbcType=DOUBLE},
      </if>
      <if test="inDate != null">
        InDate = #{inDate,jdbcType=VARCHAR},
      </if>
      <if test="deptId != null">
        DeptId = #{deptId,jdbcType=INTEGER},
      </if>
      <if test="createEmpId != null">
        CreateEmpId = #{createEmpId,jdbcType=INTEGER},
      </if>
      <if test="outEmpId != null">
        OutEmpId = #{outEmpId,jdbcType=INTEGER},
      </if>
      <if test="outStorageId != null">
        OutStorageId = #{outStorageId,jdbcType=INTEGER},
      </if>
      <if test="inDeptId != null">
        InDeptId = #{inDeptId,jdbcType=INTEGER},
      </if>
      <if test="inStorageId != null">
        InStorageId = #{inStorageId,jdbcType=INTEGER},
      </if>
      <if test="inEmpId != null">
        InEmpId = #{inEmpId,jdbcType=INTEGER},
      </if>
    </set>
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeySelective2" parameterType="domainextand.T_MoveStock">
   update t_movestock
    <set>
      <if test="billNo != null">
        BillNo = #{billNo,jdbcType=VARCHAR},
      </if>
      <if test="outDate != null">
        OutDate = #{outDate,jdbcType=VARCHAR},
      </if>
      <if test="flowFlag != null">
        FlowFlag = #{flowFlag,jdbcType=INTEGER},
      </if>
      <if test="totalCost != null">
        TotalCost = #{totalCost,jdbcType=DOUBLE},
      </if>
      <if test="inDate != null">
        InDate = #{inDate,jdbcType=VARCHAR},
      </if>
      <if test="deptId != null">
        DeptId = #{deptId,jdbcType=INTEGER},
      </if>
      <if test="createEmpId != null">
        CreateEmpId = #{createEmpId,jdbcType=INTEGER},
      </if>
      <if test="outEmpId != null">
        OutEmpId = #{outEmpId,jdbcType=INTEGER},
      </if>
      <if test="outStorageId != null">
        OutStorageId = #{outStorageId,jdbcType=INTEGER},
      </if>
      <if test="inDeptId != null">
        InDeptId = #{inDeptId,jdbcType=INTEGER},
      </if>
      <if test="inStorageId != null">
        InStorageId = #{inStorageId,jdbcType=INTEGER},
      </if>
      <if test="inEmpId != null">
        InEmpId = #{inEmpId,jdbcType=INTEGER},
      </if>
    </set>
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="domain.T_MoveStock">
    update t_movestock
    set BillNo = #{billNo,jdbcType=VARCHAR},
      OutDate = #{outDate,jdbcType=VARCHAR},
      FlowFlag = #{flowFlag,jdbcType=INTEGER},
      TotalCost = #{totalCost,jdbcType=DOUBLE},
      InDate = #{inDate,jdbcType=VARCHAR},
      DeptId = #{deptId,jdbcType=INTEGER},
      CreateEmpId = #{createEmpId,jdbcType=INTEGER},
      OutEmpId = #{outEmpId,jdbcType=INTEGER},
      OutStorageId = #{outStorageId,jdbcType=INTEGER},
      InDeptId = #{inDeptId,jdbcType=INTEGER},
      InStorageId = #{inStorageId,jdbcType=INTEGER},
      InEmpId = #{inEmpId,jdbcType=INTEGER}
    where Id = #{id,jdbcType=INTEGER}
  </update>
</mapper>